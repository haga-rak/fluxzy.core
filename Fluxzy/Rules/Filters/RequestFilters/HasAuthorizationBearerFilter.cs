// Copyright © 2022 Haga RAKOTOHARIVELO

using System;
using System.Linq;
using Fluxzy.Extensions;

namespace Fluxzy.Rules.Filters.RequestFilters
{
    [FilterMetaData(
        LongDescription = "Select exchange having bearer token in authorization."
    )]
    public class HasAuthorizationBearerFilter : Filter
    {
        public override FilterScope FilterScope => FilterScope.RequestHeaderReceivedFromClient;

        public override string AutoGeneratedName => $"Has bearer Token (authorization)";

        public override string ShortName => "auth.";

        public override bool PreMadeFilter => true;

        protected override bool InternalApply(IAuthority authority, IExchange? exchange, IFilteringContext? filteringContext)
        {
            if (exchange == null)
                return false;

            var candidates = exchange.GetRequestHeaders().Find("Authorization").ToList();
            return candidates.Any(c => c.Value.Span.StartsWith("bearer", StringComparison.InvariantCultureIgnoreCase));
        }
    }
}
