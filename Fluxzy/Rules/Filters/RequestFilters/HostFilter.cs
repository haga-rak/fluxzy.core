using Fluxzy.Misc;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Fluxzy.Rules.Filters.RequestFilters
{
    public class HostFilter : StringFilter
    {
        public HostFilter(string pattern) : this(pattern, StringSelectorOperation.Exact)
        {
        }

        [JsonConstructor]
        public HostFilter(string pattern, StringSelectorOperation operation) : base(pattern, operation)
        {
        }

        protected override IEnumerable<string> GetMatchInputs(IAuthority authority, IExchange? exchange)
        {
            if (exchange != null)
                yield return exchange.KnownAuthority;
        }


        public override FilterScope FilterScope => FilterScope.OnAuthorityReceived;

        public override string? ShortName => "host"; 

        public override string AutoGeneratedName => $"Authority {base.AutoGeneratedName}";


        public override string GenericName => "Filter by host";

        public override bool Common { get; set; } = true;

    }
}