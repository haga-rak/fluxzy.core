using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Fluxzy.Misc;

namespace Fluxzy.Rules.Filters.RequestFilters
{
    public class MethodFilter : StringFilter
    {
        public MethodFilter(string pattern) : base(pattern, StringSelectorOperation.Exact)
        {

        }
        
        protected override IEnumerable<string> GetMatchInputs(IAuthority authority, IExchange? exchange)
        {
            if (exchange != null)
                yield return exchange.Method;
        }

        public override Guid Identifier => $"{Pattern}|{Operation}".GetMd5Guid();

        protected override bool InternalApply(IAuthority? authority, IExchange? exchange,
            IFilteringContext? filteringContext)
        {
            CaseSensitive = false;
            return base.InternalApply(authority, exchange, filteringContext);
        }

        public override FilterScope FilterScope => FilterScope.RequestHeaderReceivedFromClient;


        public override string ShortName => Pattern?.ToLower() ?? "meth.";


        public override string AutoGeneratedName => $"Request method {base.AutoGeneratedName}";

        public virtual string GenericName => "Filter by HTTP method";



    }
}