// // Copyright 2022 - Haga Rakotoharivelo
// 

namespace Fluxzy.Rules.Filters.RequestFilters
{
    /// <summary>
    /// Filter by agent 
    /// </summary>

    [FilterMetaData(
        LongDescription = "Select exchange according to configured source agent (user agent or process)."
    )]
    public class AgentFilter : Filter
    {
        public AgentFilter(Agent? agent)
        {
            Agent = agent;
        }

        public Agent?  Agent { get; set; }

        public override FilterScope FilterScope { get; } = FilterScope.RequestHeaderReceivedFromClient;
        
        protected override bool InternalApply(IAuthority authority, IExchange? exchange, IFilteringContext? filteringContext)
        {
            if (exchange?.Agent == null || Agent == null)
                return false;

            return exchange.Agent.Id == Agent.Id; 
        }

        public virtual string GenericName => "Agent filter";
        
        public override string AutoGeneratedName => $"Source agent : `{Agent?.FriendlyName}`";

        public override string ShortName => "agent";

        public override bool PreMadeFilter => false;
    }
}