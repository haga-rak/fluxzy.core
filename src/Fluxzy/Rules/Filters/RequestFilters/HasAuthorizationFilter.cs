// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using System.Linq;
using Fluxzy.Extensions;

namespace Fluxzy.Rules.Filters.RequestFilters
{
    [FilterMetaData(
        LongDescription = "Select exchange having authorization header."
    )]
    public class HasAuthorizationFilter : Filter
    {
        public override FilterScope FilterScope => FilterScope.RequestHeaderReceivedFromClient;

        public override string AutoGeneratedName => "Has authorization header";

        public override string ShortName => "auth.";

        public override bool PreMadeFilter => true;

        protected override bool InternalApply(
            IAuthority authority, IExchange? exchange, IFilteringContext? filteringContext)
        {
            if (exchange == null)
                return false;

            var candidates = exchange.GetRequestHeaders().Find("Authorization").ToList();

            return candidates.Any();
        }
    }
}
