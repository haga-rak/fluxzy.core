// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using System.Collections.Generic;
using System.Linq;
using Fluxzy.Core;

namespace Fluxzy.Rules.Filters.ResponseFilters
{
    /// <summary>
    ///     Select exchanges according to HTTP status code
    /// </summary>
    [FilterMetaData(
        LongDescription = "Select exchanges according to HTTP status code."
    )]
    public class StatusCodeFilter : Filter
    {
        public List<int> StatusCodes { get; set; } = new();

        public override FilterScope FilterScope => FilterScope.ResponseHeaderReceivedFromRemote;

        public override string AutoGeneratedName =>
            $"Status code among {string.Join(", ", StatusCodes.Select(s => s.ToString()))}";

        public override string GenericName => "Filter by status code";

        public override string ShortName => new(string.Join(",", StatusCodes.Select(s => s.ToString()))
                                                      .Take(6).ToArray());

        public override bool PreMadeFilter => false;

        protected override bool InternalApply(
            ExchangeContext? exchangeContext, IAuthority authority, IExchange? exchange,
            IFilteringContext? filteringContext)
        {
            if (exchange == null)
                return false;

            return StatusCodes.Contains(exchange.StatusCode);
        }

        public override IEnumerable<FilterExample> GetExamples()
        {
            // This filter should be removed
            yield break;
        }
    }
}
