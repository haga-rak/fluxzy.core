// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using System;
using System.Collections.Generic;
using Fluxzy.Misc;
using Fluxzy.Rules.Extensions;

namespace Fluxzy.Rules.Filters.ResponseFilters
{
    /// <summary>
    ///     Select exchanges that has a JSON response body.
    /// </summary>
    [FilterMetaData(
        LongDescription = "Select exchanges having JSON response body. The content-type header is checked to determine if the content body is a JSON."
    )]
    public class JsonResponseFilter : ResponseHeaderFilter
    {
        public JsonResponseFilter()
            : base("json", StringSelectorOperation.Contains, "Content-Type")
        {
        }

        public override string AutoGeneratedName { get; } = "JSON response only";

        public override string GenericName => "JSON response only";

        public override string ShortName => "json";

        public override bool PreMadeFilter => true;

        public override bool Common { get; set; } = true;
        public override IEnumerable<FilterExample> GetExamples()
        {
            var defaultSample = GetDefaultSample();

            if (defaultSample != null)
                yield return defaultSample;
        }
    }

    public static class JsonResponseFilterExtensions
    {
        /// <summary>
        ///  
        /// </summary>
        /// <param name="builder"></param>
        /// <returns></returns>
        public static IConfigureActionBuilder WhenResponseHasJsonBody(this IConfigureFilterBuilder builder)
        {
            return builder.When(new JsonResponseFilter());
        }
    }
}
