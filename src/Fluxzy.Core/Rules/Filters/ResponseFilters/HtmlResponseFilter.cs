// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using System.Collections.Generic;
using Fluxzy.Rules.Extensions;

namespace Fluxzy.Rules.Filters.ResponseFilters
{
    /// <summary>
    ///    Select exchanges that has a HTML response body. 
    /// </summary>
    [FilterMetaData(
        LongDescription = "Select exchanges having HTML body. The content-type header is checked to determine if the content body is has text/html hint."
    )]
    public class HtmlResponseFilter : ResponseHeaderFilter
    {
        public HtmlResponseFilter()
            : base("text/html", StringSelectorOperation.Contains, "Content-Type")
        {
        }

        public override string AutoGeneratedName { get; } = "HTML response only";

        public override string GenericName => "HTML response only";

        public override string ShortName => "html";

        public override bool PreMadeFilter => true;

        public override bool Common { get; set; } = true;

        public override IEnumerable<FilterExample> GetExamples()
        {
            var defaultSample = GetDefaultSample();

            if (defaultSample != null)
                yield return defaultSample;
        }
    }


    public static class HtmlResponseFilterExtensions
    {
        /// <summary>
        ///  
        /// </summary>
        /// <param name="builder"></param>
        /// <returns></returns>
        public static IConfigureActionBuilder WhenResponseHasHtmlBody(this IConfigureFilterBuilder builder)
        {
            return builder.When(new HtmlResponseFilter());
        }
    }
}
