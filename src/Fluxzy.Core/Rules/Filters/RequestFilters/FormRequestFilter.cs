// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using Fluxzy.Rules.Extensions;

namespace Fluxzy.Rules.Filters.RequestFilters
{
    [FilterMetaData(
        LongDescription =
            "Select request sending 'multipart/form-data' or 'application/x-www-form-urlencoded' body. Filtering is made by inspecting value of `Content-Type` header"
    )]
    
    public class FormRequestFilter : FilterCollection
    {
        public FormRequestFilter()
            : base(new MultipartDataRequestFilter(), new FormUrlEncodedRequestFilter())
        {
            Operation = SelectorCollectionOperation.Or; 
        }
        
        public override FilterScope FilterScope => FilterScope.RequestHeaderReceivedFromClient;
        
        public override string GenericName => "Has a request body form";
        
        public override string AutoGeneratedName { get; } = "Form";
        
        public override string ShortName => "frm";
        
        public override bool PreMadeFilter => true;
        
        public override string Description => "Select request sending 'application/x-www-form-urlencoded' or 'multipart/form-data' body. Filtering is made by inspecting value of `Content-Type` header";
    }
    
    
    public static class FormRequestFilterExtensions
    {
        /// <summary>
        ///  When request has a form body. Filtering is made by inspecting value of `Content-Type` header
        ///  which can be 'multipart/form-data' or 'application/x-www-form-urlencoded'
        /// </summary>
        /// <param name="builder"></param>
        /// <returns></returns>
        public static IConfigureActionBuilder WhenRequestHasFormBody(this IConfigureFilterBuilder builder)
        {
            return builder.When(new FormRequestFilter());
        }
    }
}
