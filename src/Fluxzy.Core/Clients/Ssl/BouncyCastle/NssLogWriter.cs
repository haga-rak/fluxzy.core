// Copyright 2021 - Haga Rakotoharivelo - https://github.com/haga-rak

using System;
using System.IO;
using System.Text;
using Org.BouncyCastle.Utilities.Encoders;

// ReSharper disable InconsistentNaming

namespace Fluxzy.Clients.Ssl.BouncyCastle
{
    internal class NssLogWriter : IDisposable
    {
        public static readonly string CLIENT_TRAFFIC_SECRET_0 = "CLIENT_TRAFFIC_SECRET_0";
        public static readonly string SERVER_TRAFFIC_SECRET_0 = "SERVER_TRAFFIC_SECRET_0";
        public static readonly string CLIENT_HANDSHAKE_TRAFFIC_SECRET = "CLIENT_HANDSHAKE_TRAFFIC_SECRET";
        public static readonly string SERVER_HANDSHAKE_TRAFFIC_SECRET = "SERVER_HANDSHAKE_TRAFFIC_SECRET";
        public static readonly string EXPORTER_SECRET = "EXPORTER_SECRET";

        public static readonly string CLIENT_RANDOM = "CLIENT_RANDOM";

        private readonly Stream _stream;
        private readonly StreamWriter _streamWriter;

        public NssLogWriter(string fileName)
            : this(File.Create(fileName))
        {
        }

        public NssLogWriter(Stream stream)
        {
            _stream = stream;

            _streamWriter = new StreamWriter(stream, new UTF8Encoding(false)) {
                NewLine = "\r\n",
                AutoFlush = true
            };

            _streamWriter.WriteLine("# This NSS Key log file was generated by Fluxzy");
        }

        public Action<string>? KeyHandler { get; set; }

        public void Dispose()
        {
            _stream.Dispose();
        }

        public void Write(string key, byte[] clientRandom, byte[] secret)
        {
            var stringKey = $"{key} {Hex.ToHexString(clientRandom)} {Hex.ToHexString(secret)}\n";

            KeyHandler?.Invoke(stringKey);

            _streamWriter.WriteLine(stringKey);
        }
    }
}
