[{"title":"anyFilter","description":"Select all exchanges","fullTypeName":"Fluxzy.Rules.Filters.AnyFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"commentSearchFilter","description":"Select exchanges by searching a string pattern into the comment property.","fullTypeName":"Fluxzy.Rules.Filters.CommentSearchFilter","category":"Filter","scope":"outOfScope"},{"title":"filterCollection","description":"FilterCollection is a combination of multiple filters with a merging operator (OR / AND).","fullTypeName":"Fluxzy.Rules.Filters.FilterCollection","category":"Filter","scope":"onAuthorityReceived"},{"title":"hasCommentFilter","description":"Select exchanges having comment.","fullTypeName":"Fluxzy.Rules.Filters.HasCommentFilter","category":"Filter","scope":"outOfScope"},{"title":"hasTagFilter","description":"Select exchanges having tag.","fullTypeName":"Fluxzy.Rules.Filters.HasTagFilter","category":"Filter","scope":"outOfScope"},{"title":"ipEgressFilter","description":"Select exchanges according to upstream IP address. Full IP notation is used from IPv6.","fullTypeName":"Fluxzy.Rules.Filters.IpEgressFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"ipIngressFilter","description":"Select exchanges according to client ip address. Full IP notation is used from IPv6.","fullTypeName":"Fluxzy.Rules.Filters.IpIngressFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"isWebSocketFilter","description":"Select websocket exchange.","fullTypeName":"Fluxzy.Rules.Filters.IsWebSocketFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"contentTypeXmlFilter","description":"Select exchanges having XML response body.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.ContentTypeXmlFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"cssStyleFilter","description":"Select exchanges having response content type mime matching css.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.CssStyleFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"fontFilter","description":"Select exchanges having response content type matching a font payload.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.FontFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"htmlResponseFilter","description":"Select exchanges having HTML body. The content-type header is checked to determine if the content body is has text/html hint.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.HtmlResponseFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"imageFilter","description":"Select exchanges having response content type mime matching image.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.ImageFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"jsonResponseFilter","description":"Select exchanges having JSON response body. The content-type header is checked to determine if the content body is a JSON.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.JsonResponseFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"networkErrorFilter","description":"Select exchanges that fails due to network error.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.NetworkErrorFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"responseHeaderFilter","description":"Select exchanges according to response header values.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.ResponseHeaderFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"statusCodeClientErrorFilter","description":"Select exchanges that HTTP status code indicates a client error (4XX).","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.StatusCodeClientErrorFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"statusCodeFilter","description":"Select exchanges according to HTTP status code.","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.StatusCodeFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"statusCodeRedirectionFilter","description":"Select exchanges that HTTP status code indicates a redirect (3XX).","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.StatusCodeRedirectionFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"statusCodeServerErrorFilter","description":"Select exchanges that HTTP status code indicates a server/intermediary error (5XX).","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.StatusCodeServerErrorFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"statusCodeSuccessFilter","description":"Select exchanges that HTTP status code indicates a successful request (2XX).","fullTypeName":"Fluxzy.Rules.Filters.ResponseFilters.StatusCodeSuccessFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"absoluteUriFilter","description":"Select exchanges according to URI (scheme, FQDN, path and query). Supports common string search option and regular expression.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.AbsoluteUriFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"agentLabelFilter","description":"Select exchanges according to configured source agent (user agent or process) with a regular string search.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.AgentLabelFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"authorityFilter","description":"Select exchange according to hostname and a port","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.AuthorityFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"deleteFilter","description":"Select exchanges with DELETE method","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.DeleteFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"formRequestFilter","description":"Select request sending \u0027multipart/form-data\u0027 or \u0027application/x-www-form-urlencoded\u0027 body. Filtering is made by inspecting value of \u0060Content-Type\u0060 header","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.FormRequestFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"formUrlEncodedRequestFilter","description":"Select request sending \u0027application/x-www-form-urlencoded\u0027 body. Filtering is made by inspecting value of \u0060Content-Type\u0060 header","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.FormUrlEncodedRequestFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"getFilter","description":"Select exchanges with GET method","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.GetFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"h11TrafficOnlyFilter","description":"Select HTTP/1.1 exchanges only.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.H11TrafficOnlyFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"h2TrafficOnlyFilter","description":"Select H2 exchanges only.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.H2TrafficOnlyFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"hasAnyCookieOnRequestFilter","description":"Select exchanges having any request cookie","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasAnyCookieOnRequestFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"hasAuthorizationBearerFilter","description":"Select exchanges having bearer token in authorization.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasAuthorizationBearerFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"hasAuthorizationFilter","description":"Select exchanges having authorization header.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasAuthorizationFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"hasCookieOnRequestFilter","description":"Exchange having a request cookie with a specific name","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasCookieOnRequestFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"hasRequestBodyFilter","description":"Select request having body.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasRequestBodyFilter","category":"Filter","scope":"responseBodyReceivedFromRemote"},{"title":"hasSetCookieOnResponseFilter","description":"Search for a cookie value present in a \u0060set-cookie\u0060 header response.If cookie name is not defined or empty, the filter will returns any cookie having the value.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HasSetCookieOnResponseFilter","category":"Filter","scope":"responseHeaderReceivedFromRemote"},{"title":"hostFilter","description":"Select exchanges according to hostname (excluding port). To select authority (combination of host:port), use \u003Cgoto\u003EAuthorityFilter\u003C/goto\u003E.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.HostFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"isSecureFilter","description":"Select secure exchange only (non plain HTTP).","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.IsSecureFilter","category":"Filter","scope":"onAuthorityReceived"},{"title":"jsonRequestFilter","description":"Select request sending JSON body. Filtering is made by inspecting value of \u0060Content-Type\u0060 header","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.JsonRequestFilter","category":"Filter","scope":"requestBodyReceivedFromClient"},{"title":"methodFilter","description":"Select exchanges according to request method.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.MethodFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"multipartDataRequestFilter","description":"Select request sending \u0027multipart/form-data\u0027 body. Filtering is made by inspecting value of \u0060Content-Type\u0060 header","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.MultipartDataRequestFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"patchFilter","description":"Select exchanges with PATCH method","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.PatchFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"pathFilter","description":"Select exchanges according to url path. Path includes query string if any. Path must start with \u0060/\u0060","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.PathFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"postFilter","description":"Select POST (request method) only exchanges.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.PostFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"putFilter","description":"Select exchanges according to request method.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.PutFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"queryStringFilter","description":"Select exchanges containing a specific query string. If \u0060name\u0060 is not defined or empty, the search will be performed on any query string values.The search will pass if at least one value match.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.QueryStringFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"requestHeaderFilter","description":"Select exchanges according to request header values.","fullTypeName":"Fluxzy.Rules.Filters.RequestFilters.RequestHeaderFilter","category":"Filter","scope":"requestHeaderReceivedFromClient"},{"title":"abortAction","description":"Abort an exchange at the transport level. This action will close connection between fluxzy and client which may lead to depended exchanges to be aborted too.","fullTypeName":"Fluxzy.Rules.Actions.AbortAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"addRequestHeaderAction","description":"Append a request header.","fullTypeName":"Fluxzy.Rules.Actions.AddRequestHeaderAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"addResponseHeaderAction","description":"Append a response header. H2 pseudo header will be ignored.","fullTypeName":"Fluxzy.Rules.Actions.AddResponseHeaderAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"applyCommentAction","description":"Add comment to exchange. Comment has no effect on the stream behaviour.","fullTypeName":"Fluxzy.Rules.Actions.ApplyCommentAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"applyTagAction","description":"Affect a tag to exchange. Tags are meta-information and do not alter the connection.","fullTypeName":"Fluxzy.Rules.Actions.ApplyTagAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"averageThrottleAction","description":"Throttle and simulate bandwidth condition.","fullTypeName":"Fluxzy.Rules.Actions.AverageThrottleAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"changeRequestMethodAction","description":"Alter the method of an exchange.","fullTypeName":"Fluxzy.Rules.Actions.ChangeRequestMethodAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"changeRequestPathAction","description":"Change request uri path. This action alters only the path of the request. Request path includes query string.","fullTypeName":"Fluxzy.Rules.Actions.ChangeRequestPathAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"delayAction","description":"Add a latency to the exchange.","fullTypeName":"Fluxzy.Rules.Actions.DelayAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"deleteRequestHeaderAction","description":"Remove request headers. This action removes \u003Cb\u003Eevery\u003C/b\u003E occurrence of the header from the request.","fullTypeName":"Fluxzy.Rules.Actions.DeleteRequestHeaderAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"deleteResponseHeaderAction","description":"Remove response headers. This action removes \u003Cb\u003Eevery\u003C/b\u003E occurrence of the header from the response.","fullTypeName":"Fluxzy.Rules.Actions.DeleteResponseHeaderAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"fileAppendAction","description":"Write to a file. Captured variable are interpreted.","fullTypeName":"Fluxzy.Rules.Actions.FileAppendAction","category":"Action","scope":"copySibling"},{"title":"forceHttp11Action","description":"Force the connection between fluxzy and remote to be HTTP/1.1. This value is enforced by ALPN settings set during the SSL/Handshake handshake.","fullTypeName":"Fluxzy.Rules.Actions.ForceHttp11Action","category":"Action","scope":"onAuthorityReceived"},{"title":"forceHttp2Action","description":"Forces the connection between fluxzy and remote to be HTTP/2.0. This value is enforced when setting up ALPN settings during SSL/TLS negotiation. \u003Cbr/\u003EThe exchange will break if the remote does not support HTTP/2.0. \u003Cbr/\u003EThis action will be ignored when the communication is clear (h2c not supported).","fullTypeName":"Fluxzy.Rules.Actions.ForceHttp2Action","category":"Action","scope":"onAuthorityReceived"},{"title":"forceRemotePortAction","description":"Ignores the default port used by the current authority and use the provided port instead.","fullTypeName":"Fluxzy.Rules.Actions.ForceRemotePortAction","category":"Action","scope":"onAuthorityReceived"},{"title":"forceTlsVersionAction","description":"Force the usage of a specific TLS version. Values can be chosen among : Tls, Tls11, Tls12, Tls13, Ssl3, Ssl2. \u003Cbr/\u003EForcing the usage of a specific TLS version can break the exchange if the remote does not support the requested protocol.","fullTypeName":"Fluxzy.Rules.Actions.ForceTlsVersionAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"forwardAction","description":"Forward request to a specific URL. This action makes fluxzy act as a reverse proxy. Unlike [SpoofDnsAction](https://www.fluxzy.io/rule/item/spoofDnsAction), host header is automatically set and protocol switch is supported (http to https, http/1.1 to h2, ...). The URL must be an absolute path.","fullTypeName":"Fluxzy.Rules.Actions.ForwardAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"mountCertificateAuthorityAction","description":"Reply with the default root certificate used by fluxzy","fullTypeName":"Fluxzy.Rules.Actions.MountCertificateAuthorityAction","category":"Action","scope":"dnsSolveDone"},{"title":"noOpAction","description":"An action doing no operation.","fullTypeName":"Fluxzy.Rules.Actions.NoOpAction","category":"Action","scope":"requestBodyReceivedFromClient"},{"title":"removeCacheAction","description":"Remove all cache directive from request and response headers. This will force the clientto ask the latest version of the requested resource.","fullTypeName":"Fluxzy.Rules.Actions.RemoveCacheAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"setClientCertificateAction","description":"Add a client certificate to the exchange. The client certificate will be used for establishing the mTLS authentication if the remote request it. The client certificate can be retrieved from the default store (my) or from a PKCS#12 file (.p12, pfx). \u003Cbr/\u003EThe certificate will not be stored in fluxzy settings and, therefore, must be available at runtime. ","fullTypeName":"Fluxzy.Rules.Actions.SetClientCertificateAction","category":"Action","scope":"onAuthorityReceived"},{"title":"setUserAgentAction","description":"Change the User-AgentThis action is used to change the User-Agent header of the request from a list of built-in user-agent values.","fullTypeName":"Fluxzy.Rules.Actions.SetUserAgentAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"setVariableAction","description":"Set a variable or update an existing","fullTypeName":"Fluxzy.Rules.Actions.SetVariableAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"skipRemoteCertificateValidationAction","description":"Skip validating remote certificate. Fluxzy will ignore any validation errors on the server certificate.","fullTypeName":"Fluxzy.Rules.Actions.SkipRemoteCertificateValidationAction","category":"Action","scope":"onAuthorityReceived"},{"title":"skipSslTunnelingAction","description":"Instructs fluxzy to not decrypt the current traffic. The associated filter  must be on OnAuthorityReceived scope in order to make this action effective. ","fullTypeName":"Fluxzy.Rules.Actions.SkipSslTunnelingAction","category":"Action","scope":"onAuthorityReceived"},{"title":"spoofDnsAction","description":"Fix statically the remote ip or port disregards to the dns or host resolution of the current running system. Use this action to force the resolution of a hostname to a fixed IP address. ","fullTypeName":"Fluxzy.Rules.Actions.SpoofDnsAction","category":"Action","scope":"onAuthorityReceived"},{"title":"stdErrAction","description":"Write text to standard error. Captured variable are interpreted.","fullTypeName":"Fluxzy.Rules.Actions.StdErrAction","category":"Action","scope":"copySibling"},{"title":"stdOutAction","description":"Write text to standard output. Captured variable are interpreted.","fullTypeName":"Fluxzy.Rules.Actions.StdOutAction","category":"Action","scope":"outOfScope"},{"title":"updateRequestHeaderAction","description":"Update and existing request header. If the header does not exists in the original request, the header will be added. \u003Cbr/\u003EUse {{previous}} keyword to refer to the original value of the header. \u003Cbr/\u003E\u003Cstrong\u003ENote\u003C/strong\u003E Headers that alter the connection behaviour will be ignored.","fullTypeName":"Fluxzy.Rules.Actions.UpdateRequestHeaderAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"updateResponseHeaderAction","description":"Update and existing response header. If the header does not exists in the original response, the header will be added.\u003Cbr/\u003EUse {{previous}} keyword to refer to the original value of the header.\u003Cbr/\u003E\u003Cstrong\u003ENote\u003C/strong\u003E Headers that alter the connection behaviour will be ignored.","fullTypeName":"Fluxzy.Rules.Actions.UpdateResponseHeaderAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"upStreamProxyAction","description":"Use an upstream proxy.","fullTypeName":"Fluxzy.Rules.Actions.UpStreamProxyAction","category":"Action","scope":"onAuthorityReceived"},{"title":"useCertificateAction","description":"Use a specific server certificate. Certificate can be retrieved from user store or from a PKCS12 file","fullTypeName":"Fluxzy.Rules.Actions.UseCertificateAction","category":"Action","scope":"onAuthorityReceived"},{"title":"addBasicAuthenticationAction","description":"Add a basic authentication (RFC 7617) to incoming exchanges with an username and a password","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.AddBasicAuthenticationAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"injectHtmlTagAction","description":"This action stream a response body and inject a text after the first specified html tag.This action can be used to inject a html code snippet after opening \u0060\u003Chead\u003E\u0060 tag in any traversing html page.This action supports chunked transfer stream and the following body encodings: gzip, deflate, brotli and lzw.","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.InjectHtmlTagAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"mockedResponseAction","description":"Reply with a pre-made response from a raw text or file","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.MockedResponseAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"mountWelcomePageAction","description":"Reply with fluxzy welcome page","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.MountWelcomePageAction","category":"Action","scope":"dnsSolveDone"},{"title":"removeResponseCookieAction","description":"Remove a response cookie by setting the expiration date to a past date.","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.RemoveResponseCookieAction","category":"Action","scope":"responseHeaderReceivedFromRemote"},{"title":"serveDirectoryAction","description":"Serve a folder as a static web site. This action is made for mocking purpose and not production ready for a web site.","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.ServeDirectoryAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"setRequestCookieAction","description":"Add a cookie to request. This action is performed by adding/replacing \u0060Cookie\u0060 header in request.","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.SetRequestCookieAction","category":"Action","scope":"requestHeaderReceivedFromClient"},{"title":"setResponseCookieAction","description":"Add a response cookie. This action is performed by adding \u0060Set-Cookie\u0060 header in response.","fullTypeName":"Fluxzy.Rules.Actions.HighLevelActions.SetResponseCookieAction","category":"Action","scope":"responseHeaderReceivedFromRemote"}]