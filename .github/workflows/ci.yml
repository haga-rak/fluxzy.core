name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test-backend:
    name: "Build & core Tests"
    strategy:
      matrix:
        osversion: [Linux, Windows]
        ostype: ['self-hosted']
        
    runs-on: ${{ matrix.osversion }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Add nuget package source 
      continue-on-error: true  #ignore error (package source already present on the runner)
      run: dotnet nuget add source https://nuget.pkg.github.com/haga-rak/index.json -n nuget-fluxy -u haga-rak -p ${{ secrets.TOKEN_FOR_NUGET }}
    - name: Restore dependencies of tests
      run: dotnet restore test/Fluxzy.Tests
    - name: Restore dependencies
      run: dotnet restore src/Fluxzy
    - name: Build
      run: dotnet build src/Fluxzy --no-restore
    - name: Test
      run: dotnet test test/Fluxzy.Tests -e EnableDumpStackTraceOn502=true --logger "trx;logfilename=fluxzytests.trx" --results-directory ./TestResults/Fluxzy
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (${{ matrix.osversion }})
        path: ./TestResults/Fluxzy/fluxzytests.trx
  build-front:
    name: "Building electron binary"
    runs-on: 'Windows'
    steps:
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install dependencies 
      working-directory: ./src/Fluxzy.Desktop.Ui/ClientApp
      run: npm install
    - name: Build binary 
      working-directory: ./src/Fluxzy.Desktop.Ui/ClientApp
      run: npm run package-win
  publish-test-results:
    name: "Publish Tests Results"
    needs: build-and-test-backend
    runs-on: 'Linux'
    permissions:
      checks: write

      # only needed unless run with comment_mode: off
      pull-requests: write

      # only needed for private repository
      contents: read

      # only needed for private repository
      issues: read
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          trx_files: "artifacts/**/*.trx"

          
