name: Build and tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    strategy:
      matrix:
        ostype: ['self-hosted']
        osversion: [Linux, Windows]
        
    runs-on: ${{ matrix.osversion }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.ACCESS_TOKEN || github.token }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Restore dependencies of tests
      run: dotnet restore Fluxzy.Tests
    - name: Restore dependencies
      run: dotnet restore Fluxzy
    - name: Build
      run: dotnet build Fluxzy --no-restore
    - name: Test
      run: dotnet test Fluxzy.Tests -e EnableDumpStackTraceOn502=true --logger "trx;logfilename=fluxzytests.trx" --results-directory ./TestResults/Fluxzy
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (${{ matrix.osversion }})
        path: ./TestResults/Fluxzy/fluxzytests.trx
  publish-test-results:
    name: "Publish Tests Results"
    needs: build-and-test
    runs-on: 'Linux'
    permissions:
      checks: write

      # only needed unless run with comment_mode: off
      pull-requests: write

      # only needed for private repository
      contents: read

      # only needed for private repository
      issues: read
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          trx_files: "artifacts/**/*.trx"
      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'master' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/master'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/{user}/{id}
          file: badge.svg
          
